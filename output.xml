<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20181025 16:15:47.615" generator="Robot 3.0.4 (Python 2.7.12 on linux2)">
<suite source="/home/robot/workspace/myfirstbackendproject/hellohttplibrary_V3.0.robot" id="s1" name="hellohttplibrary V3.0">
<test id="s1-t1" name="Test Case 1 - Request data of client with id 1">
<kw name="Request information of all clients and check status code" library="clients_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>localhost:8080</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20181025 16:15:47.728" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20181025 16:15:47.728" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20181025 16:15:47.729" starttime="20181025 16:15:47.728"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/hotel-rest/webresources/client/</arg>
</arguments>
<status status="PASS" endtime="20181025 16:15:47.751" starttime="20181025 16:15:47.729"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20181025 16:15:47.752" level="INFO">${status} = 200 OK</msg>
<status status="PASS" endtime="20181025 16:15:47.752" starttime="20181025 16:15:47.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20181025 16:15:47.753" starttime="20181025 16:15:47.752"></status>
</kw>
<status status="PASS" endtime="20181025 16:15:47.753" starttime="20181025 16:15:47.728"></status>
</kw>
<status status="PASS" endtime="20181025 16:15:47.753" critical="yes" starttime="20181025 16:15:47.727"></status>
</test>
<test id="s1-t2" name="Test Case 2 - Request data from all clients">
<kw name="Request information of all clients and check status code" library="clients_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>localhost:8080</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20181025 16:15:47.756" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20181025 16:15:47.757" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20181025 16:15:47.758" starttime="20181025 16:15:47.756"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/hotel-rest/webresources/client/</arg>
</arguments>
<status status="PASS" endtime="20181025 16:15:47.781" starttime="20181025 16:15:47.758"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${status}</var>
</assign>
<msg timestamp="20181025 16:15:47.781" level="INFO">${status} = 200 OK</msg>
<status status="PASS" endtime="20181025 16:15:47.781" starttime="20181025 16:15:47.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20181025 16:15:47.782" starttime="20181025 16:15:47.782"></status>
</kw>
<status status="PASS" endtime="20181025 16:15:47.782" starttime="20181025 16:15:47.755"></status>
</kw>
<status status="PASS" endtime="20181025 16:15:47.783" critical="yes" starttime="20181025 16:15:47.754"></status>
</test>
<test id="s1-t3" name="Test Case 3 - Create a new client">
<kw name="Create A New Client With A Post Request" library="clients_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>localhost:8080</arg>
<arg>http</arg>
</arguments>
<msg timestamp="20181025 16:15:47.789" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20181025 16:15:47.789" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20181025 16:15:47.789" starttime="20181025 16:15:47.788"></status>
</kw>
<kw name="Generate A Random Client" library="clients_operations">
<assign>
<var>${client json}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20181025 16:15:47.791" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20181025 16:15:47.791" starttime="20181025 16:15:47.790"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20181025 16:15:47.792" level="INFO">${name} = B0GFB66eNE</msg>
<status status="PASS" endtime="20181025 16:15:47.792" starttime="20181025 16:15:47.791"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1451602800000</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20181025 16:15:47.794" level="INFO">${createDate} = 1451602800000</msg>
<status status="PASS" endtime="20181025 16:15:47.794" starttime="20181025 16:15:47.793"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR =</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20181025 16:15:47.794" level="INFO">${email} = SEPARATOR = B0GFB66eNE @email.com</msg>
<status status="PASS" endtime="20181025 16:15:47.794" starttime="20181025 16:15:47.794"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20181025 16:15:47.795" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20181025 16:15:47.795" starttime="20181025 16:15:47.795"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20181025 16:15:47.796" level="INFO">${socialSecurityNumber} = 099360397</msg>
<status status="PASS" endtime="20181025 16:15:47.796" starttime="20181025 16:15:47.795"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name = ${name}</arg>
<arg>createDate = 1451602800000</arg>
<arg>email= ${email}</arg>
<arg>gender = ${gender}</arg>
<arg>socialSecurityNumber =</arg>
<arg>${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${Client_dictionary}</var>
</assign>
<msg timestamp="20181025 16:15:47.797" level="FAIL">Dictionary item '${socialSecurityNumber}' does not contain '=' separator.</msg>
<status status="FAIL" endtime="20181025 16:15:47.797" starttime="20181025 16:15:47.796"></status>
</kw>
<status status="FAIL" endtime="20181025 16:15:47.797" starttime="20181025 16:15:47.789"></status>
</kw>
<status status="FAIL" endtime="20181025 16:15:47.797" starttime="20181025 16:15:47.785"></status>
</kw>
<status status="FAIL" endtime="20181025 16:15:47.803" critical="yes" starttime="20181025 16:15:47.784">Dictionary item '${socialSecurityNumber}' does not contain '=' separator.</status>
</test>
<status status="FAIL" endtime="20181025 16:15:47.803" starttime="20181025 16:15:47.617"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="2">Critical Tests</stat>
<stat fail="1" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="1" id="s1" name="hellohttplibrary V3.0" pass="2">hellohttplibrary V3.0</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
